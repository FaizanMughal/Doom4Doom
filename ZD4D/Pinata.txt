//============================================================================================================
//============================================================================================================
//
// PiÃ±ata pickups
//
//============================================================================================================
//============================================================================================================

Class D4PinataParticles : Actor 
{
	int user_t;
	int user_count;
	double  user_pitch;
	double  user_dist;
	const Increment = 4;
	const Distance = 200;
	
	Default 
	{
		Radius 1;
		Height 1;
		+NOINTERACTION
		+NOTONAUTOMAP
		RenderStyle "None";
	}
	
	//override void PostBeginPlay() { Destroy();	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			Thing_ChangeTID(0,0);
				 if (CheckClass("D4PinataArmor",MasterPtr))		{ user_t = Color_Green; }
			else if (CheckClass("D4PinataCarrion",MasterPtr))	{ user_t = Color_Red; }
			else if (CheckClass("D4PinataHealth",MasterPtr))	{ user_t = Color_Blue; }
			else if (CheckClass("D4BFGAmmo",MasterPtr,true))	{ user_t = Color_Green; }
		}
	Looping:
		TNT1 A 1
		{
			if (IsPointerEqual(MasterPtr,NullPtr))	{ return ResolveState("Null");	}
			if (GetCvar("D4D_PinataParticles"))
			{
				if (GetDistance(true,MasterPtr) >= Increment && !A_CheckSight("Null"))
				{	
					A_FaceMaster(0,0,0,0,FAF_MIDDLE);
					user_dist = GetDistance(true,MasterPtr);
					return ResolveState("Making");
				}
				A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
			}
			else
			{	A_SetTics(35);	}
			return ResolveState(null);
		}
		Loop;
	Making:
		TNT1 A 1 
		{
			user_count = 0;
			while ((user_count < Min(user_dist,Distance)) && !A_CheckSight("Null"))
			{
					 if (user_t == Color_Green) 	{ A_SpawnParticle("00FF00",SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(pitch)*user_count,0,-sin(pitch)*user_count); }
				else if (user_t == Color_Red)		{ A_SpawnParticle("FF2846",SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(pitch)*user_count,0,-sin(pitch)*user_count); }
				else if (user_t == Color_Blue)		{ A_SpawnParticle("29C9FF",SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(pitch)*user_count,0,-sin(pitch)*user_count); }
				else 								{ A_SpawnParticle("FFED29",SPF_FULLBRIGHT|SPF_RELATIVE,25,8,0,cos(pitch)*user_count,0,-sin(pitch)*user_count); }
				user_count += Increment;
			}
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION,"Null",0.5);
		}
		Goto Looping;
	}
}

//---------------------------------------------------------------
//---------------------------------------------------------------
//	Normal version (dropped by all monsters on regular death)
//---------------------------------------------------------------
//---------------------------------------------------------------
Class MonsterPinataSmashedNormal : Actor 
{
	Default 
	{
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			//health giver
			if(A_JumpIfHealthLower(40,"Null",AAPTR_PLAYER1))
			{
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,192);
			}
			
			//Armor giver
			if(CountInv("BasicArmor",AAPTR_PLAYER1) < 200 && CountInv("D4ArmorCapRaiser",AAPTR_PLAYER1)>=50)	//only if player isnt at full armor and has upgraded his armor
			{
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,230); //very rarely they will drop armor
			}
			
			//bullets giver
			if(CountInv("D4AssaultRifle",AAPTR_PLAYER1) && CountInv("D4Bullets",AAPTR_PLAYER1)<10)
			{
				A_SpawnItemEx("D4PinataBullets",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataBullets",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			else if(CountInv("D4Chaingun",AAPTR_PLAYER1) && CountInv("D4Bullets",AAPTR_PLAYER1)<10)
			{
				A_SpawnItemEx("D4PinataBullets",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataBullets",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			
			//Shells giver
			if(CountInv("D4Shotgun",AAPTR_PLAYER1) && CountInv("D4Shells",AAPTR_PLAYER1)<5)
			{
				A_SpawnItemEx("D4PinataShells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataShells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			else if(CountInv("D4SuperShotgun",AAPTR_PLAYER1) && CountInv("D4Shells",AAPTR_PLAYER1)<5)
			{
				A_SpawnItemEx("D4PinataShells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataShells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			
			//Cells giver
			if(CountInv("D4PlasmaRifle",AAPTR_PLAYER1) && CountInv("D4Cells",AAPTR_PLAYER1)<16)
			{
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);	
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			else if(CountInv("D4GaussCannon",AAPTR_PLAYER1) && CountInv("D4Cells",AAPTR_PLAYER1)<16)
			{
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			else if(CountInv("D4VortexRifle",AAPTR_PLAYER1) && CountInv("D4Cells",AAPTR_PLAYER1)<16)
			{
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			else if(CountInv("D4LightningGun",AAPTR_PLAYER1) && CountInv("D4Cells",AAPTR_PLAYER1)<16)
			{
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataCells",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,240);
			}
			
			//Rockets giver
			if(CountInv("D4RocketLauncher",AAPTR_PLAYER1) && CountInv("D4Rockets",AAPTR_PLAYER1)<1)
			{
				A_SpawnItemEx("D4PinataRockets",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,196);	
			}
			
			//BFG ammo giver, this one doesnt check for ammo low, but it does check for the weapon
			if(CountInv("D4BFG",AAPTR_PLAYER1) && CountInv("BFGUpgrade1",AAPTR_PLAYER1))
			{
				A_SpawnItemEx("D4PinataBFG",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,253);	 //almost never
			}
		}
		TNT1 A 0;
		Stop;
	}
}

//---------------------------------------------------------------
//---------------------------------------------------------------
//	Chainsaw version (dropped by all monsters when csaw executed)
//---------------------------------------------------------------
//---------------------------------------------------------------
Class MonsterPinataSmashedChainsaw : Actor 
{
	
	Default 
	{
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
			//health giver
			if (A_JumpIfHealthLower(60,"Null",AAPTR_PLAYER1))
			{
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataHealth",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,192);
			}
			
			//armor giver
			if (CountInv("D4ArmorCapRaiser",Player1) >= 25)
			{
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
			}
			if (CountInv("D4ArmorCapRaiser",Player1) >= 50)
			{
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,128);
			}
			if (CountInv("D4ArmorCapRaiser",Player1) >= 100)
			{
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4PinataArmor",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			}
			
			
			A_SpawnItemEx("D4PinataBulletsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataBulletsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataBulletsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataBulletsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);	//200 bullets
			
			
			A_SpawnItemEx("D4PinataShellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataShellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataShellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //24 shells, come on, you dont need more of this, you get a TON everywehre else
			
			
			
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //200 cells
			
			
			A_SpawnItemEx("D4PinataRocketsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataRocketsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("D4PinataRocketsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //18 rockets*/
			
			
			//BFG ammo giver, this one doesnt check for ammo low, but it does check for the weapon
			if (CountInv("D4BFG",AAPTR_PLAYER1))
			{
				A_SpawnItemEx("D4PinataBFG",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION,232);	 //very rarely
			}
		}
		TNT1 A 0;
		Stop;
	}
}


//-------------------------------------------------------
// This one is for when the "loot" is off, you still get
// stuff, but MUCH less
//-------------------------------------------------------
Class MonsterPinataSmashedChainsawSmall : Actor 
{
	
	Default 
	{
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY
		{
			A_SpawnItemEx("D4PinataBulletsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION);	//50 bullets
			A_SpawnItemEx("D4PinataShellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //8 shells
			A_SpawnItemEx("D4PinataCellsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //40 cells
			A_SpawnItemEx("D4PinataRocketsBig",0,0,0,frandom(-4,4),frandom(-4,4),frandom(1,5),0,SXF_NOCHECKPOSITION); //6 rockets
		}
		TNT1 A 0;
		Stop;
	}
}

//---------------------------------
// PiÃ±ata Armor
Class D4PinataArmor : D4ArmorBonus
{
	int user_count;
	double  user_ang;
	const Distance = 5;
	const MaxSteps = 30;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Armor.SaveAmount 6;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 A 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Green);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && CountInv("IamADemonToken",TracerPtr)==0 )
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && CountInv("IamADemonToken",TracerPtr)==0 )
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if (CountInv("Armor",TracerPtr) >= 200 || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}

Class D4PinataBorder : Actor 
{
	Actor ms;
	Default 
	{
		+NOINTERACTION
		+BRIGHT
		+FORCEXYBILLBOARD
		Scale 0.3;
		DistanceCheck "user_MaxDrawDistance";
	}
	
	//override void PostBeginPlay() { Destroy();	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (!master)	{	Destroy();	return ResolveState(null);	}
			ms = master;
			if (master.GetClass() == "D4PinataArmor")		{ return ResolveState(1); }
			if (master.GetClass() == "D4PinataHealth")		{ return ResolveState(2); }
			if (master is "D4Carrion")						{ return ResolveState(3); }
			if (master is "D4BFGAmmo")						{ return ResolveState(4); }
			if (master is "Ammo")							{ return ResolveState(3); }
			return ResolveState("Null");
		}
		PIN3 ABDH 0 A_Jump(256,"Enact");
	Enact:
		"####" "#" 1
		{
			if (!master || master != ms)	{ Destroy(); return; }
			A_Warp(MasterPtr,0,0,5,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_COPYVELOCITY,"Null");
		}
		Loop;
	}
}



//---------------------------------
// Pinata health
Class D4PinataHealth : D4Stimpack
{
	int user_count;
	
	Default 
	{
		Inventory.PickUpSound "Doom4/Pickups/Health";
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		Inventory.Amount 8;
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 B 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Blue);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (tracer && !tracer.CountInv("IamADemonToken") && tracer.health < (100 + int(GetCvar("D4Stamina"))))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (tracer && !tracer.CountInv("IamADemonToken") && tracer.health < (100 + int(GetCvar("D4Stamina"))))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (tracer && !tracer.CountInv("IamADemonToken") && tracer.health < (100 + int(GetCvar("D4Stamina"))))
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			//
			if (!tracer || tracer.bKILLED || !tracer.CountInv("IamADemonToken") && tracer.health >= (100 + int(GetCvar("D4Stamina"))))
			//if (!A_JumpIfHealthLower(100 + GetCvar("D4Stamina"),"Null",TracerPtr) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}


//---------------------------------
// Pinata ammo bullets
Class D4PinataBullets : D4Bullets
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 20;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		+NOBLOCKMONST
		+NOTELESTOMP
		BounceFactor 0.5;
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 D 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Bullets",TracerPtr) < 250) && CountInv("IamADemonToken",TracerPtr)==0 )
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Bullets",TracerPtr) < 250) && CountInv("IamADemonToken",TracerPtr)==0 )
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Bullets",TracerPtr) < 250) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Bullets",TracerPtr) >= 250 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataBulletsBig : D4PinataBullets
{
	
	Default 
	{
		Scale 0.4;
		Inventory.Amount 50;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Bullets",TracerPtr) < 250 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Super::Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//---------------------------------
// Pinata ammo shells
Class D4PinataShells : D4Shells
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 4;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 E 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Shells",TracerPtr) < 45 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Shells",TracerPtr) < 45 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Shells",TracerPtr) < 45) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Shells",TracerPtr) >= 45 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}


Class D4PinataShellsBig : D4PinataShells
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 8;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || (CountInv("D4Shells",TracerPtr) >= 45 && CountInv("IamADemonToken",TracerPtr)==0))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}



//---------------------------------
// Pinata ammo cells
Class D4PinataCells : D4Cells
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 20;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 F 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Cells",TracerPtr) < 200 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Cells",TracerPtr) < 200 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Cells",TracerPtr) < 200) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Cells",TracerPtr) >= 200 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataCellsBig : D4PinataCells
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 40;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Cells",TracerPtr) < 200 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//---------------------------------
// Pinata ammo rockets
Class D4PinataRockets : D4Rockets
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 3;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 G 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Rockets",TracerPtr) < 30 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0) && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Rockets",TracerPtr) < 30 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Rockets",TracerPtr) < 30) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Rockets",TracerPtr) >= 30 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataRocketsBig : D4PinataRockets
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 6;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	states
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4Rockets",TracerPtr) < 30 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}


//---------------------------------
// Pinata ammo BFG

Class D4PinataBFG : D4BFGAmmo
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 H 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Green);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4BFGAmmo",TracerPtr) < 3 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime*4)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && CountInv("IamADemonToken",TracerPtr)==0 || CountInv("D4BFGAmmo",TracerPtr) < 3 && CountInv("IamADemonToken",TracerPtr)==0)
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4BFGAmmo",TracerPtr) < 3) && CountInv("IamADemonToken",TracerPtr)==0 )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4BFGAmmo",TracerPtr) >= 3 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || CountInv("IamADemonToken",TracerPtr))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//=======================================================================
//=======================================================================
// Special drops for zombieman, shotgunguy and chaingunner
//=======================================================================
//=======================================================================

//*********************************
// zombieman
Class D4PinataBulletsZombieman : D4Bullets	//only dropped by these guys, and they dont go after player
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Inventory.Amount 10;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		BounceType "Doom";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 D 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 A_FadeOut();
		Wait;
	}
}


Class D4PinataShellsShotgunGuy : D4Shells	//only dropped by these guys, and they dont go after player
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Inventory.Amount 8;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		BounceType "Doom";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 E 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 A_FadeOut();
		Wait;
	}
}

Class D4PinataBulletsChaingunGuy : D4PinataBulletsZombieman	//only dropped by these guys, and they dont go after player
{
	
	Default 
	{ Inventory.Amount 10; }
}




//---------------------------------
// Le cash!


Class D4Cash : Actor 
{
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
	}
	States
	{
	Spawn:
		PINA C 1 NODELAY Bright
		{
			A_SpawnParticle("999999",SPF_FULLBRIGHT,35,3);
			if(A_CheckFloor("Null"))
			{
				return ResolveState("Landed");
			}
			return ResolveState(null);
		}
		Loop;
	Landed:
		PINA C -1 Bright;
		Stop;
	}
}