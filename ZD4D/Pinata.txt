Struct MathFunc
{
	Vector3 Vec3Sub(Vector3 v1, Vector3 v2)
	{
		return v1 - v2;
	}
	
}

//============================================================================================================
//============================================================================================================
//
// Piñata pickups
//
//============================================================================================================
//============================================================================================================

Class D4PinataBorder : Actor 
{
	int user_t;
	int user_count;
	double user_pitch;
	double user_dist;
	const Increment = 4;
	const Distance = 200;
	Actor ms;
	Default 
	{
		+NOINTERACTION
		+BRIGHT
		+FORCEXYBILLBOARD
		Scale 0.3;
		DistanceCheck "user_MaxDrawDistance";
	}
	
	override void PostBeginPlay() { Destroy();	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (!master)	{	Destroy();	return ResolveState(null);	}
			ms = master;
			if (master.GetClass() == "D4PinataArmor")		{ return ResolveState(1); }
			if (master.GetClass() == "D4PinataHealth")		{ return ResolveState(2); }
			if (master is "D4Carrion")						{ return ResolveState(3); }
			if (master is "D4BFGAmmo")						{ return ResolveState(4); }
			if (master is "Ammo")							{ return ResolveState(3); }
			return ResolveState("Null");
		}
		PIN3 ABDH 0 A_Jump(256,"Enact");
	Enact:
		"####" "#" 1
		{
			if (!master || master != ms)	{ Destroy(); return; }
			A_Warp(MasterPtr,0,0,5,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_COPYVELOCITY,"Null");
		}
		Loop;
	}
}

Class D4PinataParticles : Actor 
{
	Color PT;
	Vector3 oldpos;
	int frm;
	enum PinataParticleBorder
	{
		CV_Border = 			0,
		CV_BorderParticle = 	1,
		CV_Particle = 			2,
		CV_None = 				3,
		
		CV_ParticleBorder = CV_BorderParticle,
		Distance = 				200,
		Increment = 			4
	};
	
	Default 
	{
		Radius 1;
		Height 1;
		+NOINTERACTION
		+NOTONAUTOMAP
		+BRIGHT
		+FORCEXYBILLBOARD
		Scale 0.3;
		DistanceCheck "user_MaxDrawDistance";
	}
	
	override void PostBeginPlay() 
	{	
		if (!master)	{	Destroy();	return;	}
		oldpos = master.pos;
		Super.PostBeginPlay();
		
		ChangeTID(0);
		
		Class<Actor> cls = master.GetClass();
		
		if (cls == "D4PinataArmor")
		{	PT = "00FF00";	frm = 0;	}
		else if (master is "D4BFGAmmo")
		{	PT = "00FF00";	frm = 7;	}
		else if (cls == "D4PinataCarrion")
		{	PT = "FF2846";	frm = 3;	A_SetTranslation("CarrionBorder");	}
		else if (cls == "D4PinataHealth")
		{	PT = "29C9FF";	frm = 1;	}
		else
		{	PT = "FFED29";	frm = 3;	}
	}
	
	// Credit to TheZombieKiller for this. <3
	void SpawnPinataParticleLine(Color c, double units, Vector3 pointA, Vector3 pointB)
	{
		//if (pointA == pointB)	return;
		// get a vector pointing from A to B
		let pointAB = pointB - pointA;
		
		// get distance
		let dist = pointAB.Length();
		
		// normalize it
		pointAB /= dist;
		
		// iterate in units of 4
		for (double i = 1; i <= dist; i += units)
		{
			// we can now use 'pointA + i * pointAB' to
			// get a position that is 'i' units away from
			// pointA, heading in the direction towards pointB
			let position = i * pointAB;
			A_SpawnParticle(c,SPF_FULLBRIGHT,25,8,0,position.x,position.y,position.z);
		}
	}
		
	States
	{
	Spawn:
		PIN3 A 0 NoDelay { Frame = frm; }
	Looping:
		"####" "#" 1
		{
			
			if (!master)	{ Destroy();	return;	}
			int cv = GetCvar("D4D_PinataParticles");
			if (cv == CV_Border || cv == CV_BorderParticle)
			{
				bINVISIBLE = (cv == CV_Particle) ? true : false;
				A_Warp(MasterPtr,0,0,5,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_COPYVELOCITY,"Null"/*,0.5*/);
				
				if ((cv == CV_BorderParticle || cv == CV_Particle))
				{	
					SpawnPinataParticleLine(PT, 4.0, master.pos - master.vel, master.pos);
					oldpos = master.pos;
				}
			}
			else
			{	bINVISIBLE = true; A_SetTics(35);	}
		}
		Loop;
	}
}

//---------------------------------
// Piñata Armor
Class D4PinataArmor : D4ArmorBonus
{
	int user_count;
	double user_ang;
	const Distance = 5;
	const MaxSteps = 30;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Armor.SaveAmount 6;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		DistanceCheck "user_MaxDrawDistance";
	}
	
	States
	{
	Spawn:
		PIN2 A 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Green);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && tracer && !tracer.FindInventory("PowerMorph",true) )
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && tracer && !tracer.FindInventory("PowerMorph",true) )
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("Armor",TracerPtr) < 200) && tracer && !tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if (CountInv("Armor",TracerPtr) >= 200 || A_JumpIfHealthLower(1,"Null",TracerPtr) || !tracer || tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}



//---------------------------------
// Pinata health
Class D4PinataHealth : D4Stimpack
{
	int user_count;
	
	Default 
	{
		Inventory.PickUpSound "Doom4/Pickups/Health";
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		Inventory.Amount 8;
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 B 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Blue);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (tracer && !tracer.FindInventory("PowerMorph",true) && tracer.health < (100 + int(GetCvar("D4Stamina"))))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (tracer && !tracer.FindInventory("PowerMorph",true) && tracer.health < (100 + int(GetCvar("D4Stamina"))))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (tracer && !tracer.FindInventory("PowerMorph",true) && tracer.health < (100 + int(GetCvar("D4Stamina"))))
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			//
			if (!tracer || tracer.bKILLED || !tracer.FindInventory("PowerMorph",true) && tracer.health >= (100 + int(GetCvar("D4Stamina"))))
			//if (!A_JumpIfHealthLower(100 + GetCvar("D4Stamina"),"Null",TracerPtr) || A_JumpIfHealthLower(1,"Null",TracerPtr) || tracer && tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}


//---------------------------------
// Pinata ammo bullets
Class D4PinataBullets : D4Bullets
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 20;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		+NOBLOCKMONST
		+NOTELESTOMP
		BounceFactor 0.5;
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 D 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Bullets",TracerPtr) < 250) && tracer && !tracer.FindInventory("PowerMorph",true) )
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Bullets",TracerPtr) < 250) && tracer && !tracer.FindInventory("PowerMorph",true) )
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Bullets",TracerPtr) < 250) && tracer && tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Bullets",TracerPtr) >= 250 && GetCvar("sv_unlimited_pickup") == 0) || tracer.health < 1 || !tracer || tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataBulletsBig : D4PinataBullets
{
	
	Default 
	{
		Scale 0.4;
		Inventory.Amount 50;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (tracer && !tracer.FindInventory("PowerMorph",true) && (GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Bullets",TracerPtr) < 250))
					{	return ResolveState("Super::Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//---------------------------------
// Pinata ammo shells
Class D4PinataShells : D4Shells
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 4;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
		DistanceCheck "user_MaxDrawDistance";
	}
	States
	{
	Spawn:
		PIN2 E 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Shells",TracerPtr) < 45) && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0 || CountInv("D4Shells",TracerPtr) < 45) && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Shells",TracerPtr) < 45) && tracer && !tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Shells",TracerPtr) >= 45 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || !tracer || tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}


Class D4PinataShellsBig : D4PinataShells
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 8;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || (CountInv("D4Shells",TracerPtr) >= 45 && tracer && !tracer.FindInventory("PowerMorph",true)))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}



//---------------------------------
// Pinata ammo cells
Class D4PinataCells : D4Cells
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 20;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 F 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Cells",TracerPtr) < 200 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Cells",TracerPtr) < 200 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Cells",TracerPtr) < 200) && tracer && !tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Cells",TracerPtr) >= 200 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || tracer && tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataCellsBig : D4PinataCells
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 40;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	States
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Cells",TracerPtr) < 200 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//---------------------------------
// Pinata ammo rockets
Class D4PinataRockets : D4Rockets
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		Inventory.Amount 3;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 G 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_SETTRACER))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Rockets",TracerPtr) < 30 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if ((GetCvar("sv_unlimited_pickup") > 0) && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Rockets",TracerPtr) < 30 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4Rockets",TracerPtr) < 30) && tracer && !tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4Rockets",TracerPtr) >= 30 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || tracer && tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}
Class D4PinataRocketsBig : D4PinataRockets
{
	Default 
	{
		Scale 0.4;
		Inventory.Amount 6;
		Inventory.PickupSound "Doom4/Pickups/AmmoBig";
	}
	states
	{
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4Rockets",TracerPtr) < 30 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	}
}


//---------------------------------
// Pinata ammo BFG

Class D4PinataBFG : D4BFGAmmo
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 H 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0,Color_Green);
		}
	Looping:
		"----" A 1
		{
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4BFGAmmo",TracerPtr) < 3 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			else
			{	user_count++;	}
			
			if(A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetime*4)
			{	return ResolveState("Fading");		}
			if (user_count >= DelayVacuum)
			{
				A_RearrangePointers(DefPtr,DefPtr,NullPtr,4);
				if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
				{
					if (GetCvar("sv_unlimited_pickup") > 0 && tracer && !tracer.FindInventory("PowerMorph",true) || CountInv("D4BFGAmmo",TracerPtr) < 3 && tracer && !tracer.FindInventory("PowerMorph",true))
					{	return ResolveState("Suckage");	}
				}
			}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1  
		{
			
			if (A_CheckProximity("Null","PlayerPawn",RadiusPull,1,CPXF_CHECKSIGHT|CPXF_SETTRACER|CPXF_ANCESTOR))
			{
				if (((GetCvar("sv_unlimited_pickup") > 0) || CountInv("D4BFGAmmo",TracerPtr) < 3) && tracer && !tracer.FindInventory("PowerMorph",true) )
				{	
					user_count = DelayVacuum;
					A_FadeIn(1,FTF_CLAMP);
					return ResolveState("Suckage");	
				}
			}
			A_FadeOut();
			return ResolveState(null);
		}
		Wait;
	Suckage:
		"####" "#" 1
		{
			if ((CountInv("D4BFGAmmo",TracerPtr) >= 3 && GetCvar("sv_unlimited_pickup") == 0) || A_JumpIfHealthLower(1,"Null",TracerPtr) || tracer && tracer.FindInventory("PowerMorph",true))
			{	
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false); //NOINTERACTION sets NOBLOCKMAP.
				return ResolveState("Looping");	
			}
			bNoclip = true;
			bNOINTERACTION = true;
			A_FaceTracer(0,0,0,0,FAF_MIDDLE);
			A_SetTics(2); A_ChangeVelocity(cos(pitch)*PSpeed,0,-sin(pitch)*PSpeed,CVF_RELATIVE|CVF_REPLACE);
			if (GetDistance(true,TracerPtr) <= 32)
			{
				A_Warp(TracerPtr,0,0,16,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_STOP);
				bNoclip = false;
				bNoInteraction = false;
				A_ChangeLinkFlags(false);
			}
			return ResolveState(null);
		}
		Loop;
	}
}

//=======================================================================
//=======================================================================
// Special drops for zombieman, shotgunguy and chaingunner
//=======================================================================
//=======================================================================

//*********************************
// zombieman
Class D4PinataBulletsZombieman : D4Bullets	//only dropped by these guys, and they dont go after player
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Inventory.Amount 10;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		BounceType "Doom";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 D 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 A_FadeOut();
		Wait;
	}
}


Class D4PinataShellsShotgunGuy : D4Shells	//only dropped by these guys, and they dont go after player
{
	int user_count;
	
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Inventory.Amount 8;
		Inventory.PickupSound "Doom4/Pickups/AmmoSmall";
		BounceType "Doom";
		+BRIGHT
		+BOUNCEONFLOORS
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		BounceFactor 0.5;
		+NOBLOCKMONST
	}
	States
	{
	Spawn:
		PIN2 E 0 NoDelay 
		{
			A_SpawnItemEx("D4PinataBorder",0,0,5,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("D4PinataParticles",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
	Looping:
		"----" A 1
		{
			if (A_CheckFloor("Null"))	{	return ResolveState("Landed");	}
			return ResolveState(null);
		}
		Loop;
	Landed:
		"####" "#" 1
		{
			user_count++;
			if (user_count > PinataLifetimeLong)
			{	return ResolveState("Fading");		}
			return ResolveState(null);
		}
		Loop;
	Fading:
		"####" "#" 1 A_FadeOut();
		Wait;
	}
}

Class D4PinataBulletsChaingunGuy : D4PinataBulletsZombieman	//only dropped by these guys, and they dont go after player
{
	
	Default 
	{ Inventory.Amount 10; }
}




//---------------------------------
// Le cash!


Class D4Cash : Actor 
{
	Default 
	{
		Scale 0.3;
		Radius 8;
		Height 16;
		Gravity 0.4;
	}
	States
	{
	Spawn:
		PINA C 1 NODELAY Bright
		{
			A_SpawnParticle("999999",SPF_FULLBRIGHT,35,3);
			if(A_CheckFloor("Null"))
			{
				return ResolveState("Landed");
			}
			return ResolveState(null);
		}
		Loop;
	Landed:
		PINA C -1 Bright;
		Stop;
	}
}