Class LookObject : Actor
{
    Default
	{
		+NOGRAVITY;
		+WALLSPRITE;
		+BRIGHT;
		+SOLID;
		Scale 0.25;
		Radius 8;
		Height 16;
	}

    Override Void BeginPlay()
	{
	
		//int sk = G_SkillPropertyInt(SKILLP_ACSReturn);
		
		//if(sk >= 3) { bINVISIBLE = 1; }
		
		Super.BeginPlay();
	}
    
    Override Void Tick()
	{
		Super.Tick();
		
		if (!Target) { LookForPlayers(1); return; } 

		double dst = 1.0-((clamp(Distance3D(target),128,256)-128)/(256-128));
		A_SetTranslucent(dst);
		
		if (CheckIfInTargetLOS(20,0,96)) // Is the player looking at 'LookObject' ? 
		{
			//Do Stuff here
			if (target)
			{
				double offs = target.height;
				let plr = PlayerPawn(target);
				if (plr)
				{
					offs *= plr.GetCrouchFactor();
				}
				A_Face(target,0,0,0,0,FAF_BOTTOM,offs);
				
				let tp = -target.pitch;
				
				bINVISIBLE = (tp - pitch >= height || tp - pitch <= 0);
			}
		}
	}

    States
	{
	Spawn:
		PLAY A -1;
		Loop;
	}
}

Class UpgradeItem : Inventory
{
	int Cost;
	int Quantity;
	bool Tiered;
	property Cost: Cost;
	property Quantity: Quantity;
	property Tiered: Tiered;
	Default
	{
		UpgradeItem.Cost 3000;
		UpgradeItem.Quantity 1;
		UpgradeItem.Tiered false;
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.UNTOSSABLE;
		+INVENTORY.KEEPDEPLETED;
	}
}

Class UpgradeItemTier : UpgradeItem
{
	int CurrentTier, MaxTier;
	int Cost2, Cost3, Cost4;
	int QuantityMax, Q2, Q3, Q4;
	property Cost2: Cost2;
	property Cost3: Cost3;
	property Cost4: Cost4;
	property Quantity2: Q2;
	property Quantity3: Q3;
	property Quantity4: Q4;
	property QuantityMax: QuantityMax;
	property MaxTier: MaxTier;
	
	Default
	{
		UpgradeItem.Tiered true;
		UpgradeItem.Cost -1;
		UpgradeItemTier.Cost2 -1;
		UpgradeItemTier.Cost3 -1;
		UpgradeItemTier.Cost4 -1;
		UpgradeItem.Quantity 1;
		UpgradeItemTier.Quantity2 -1;
		UpgradeItemTier.Quantity3 -1;
		UpgradeItemTier.Quantity4 -1;
		UpgradeItemTier.QuantityMax -1;
		
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.UNTOSSABLE;
		+INVENTORY.KEEPDEPLETED;
	}
	
	override void BeginPlay()
	{
		Super.BeginPlay();
		
		QuantityMax = Max(Quantity, Q2, Q3, Q4);
	}
}

//==============================================================================
//==============================================================================
//	Weapon Upgrades
//==============================================================================
//==============================================================================

Class AssaultRifleMod1 : UpgradeItem 			{ Default {	UpgradeItem.Cost 3000;	}}	// Scope mod
Class AssaultRifleMod2 : UpgradeItem 			{ Default {	UpgradeItem.Cost 4000;	}}	// mini missiles mod
Class BFGUpgrade1 : UpgradeItem 				{ Default { UpgradeItem.Cost 10000; }}	// Ammo Capacity
Class BFGUpgrade2 : UpgradeItem 				{ Default { UpgradeItem.Cost 20000; }} 	// Alt Fire
Class BFGUpgrade3 : UpgradeItem 				{ Default { UpgradeItem.Cost 10000; }}	// Projectile; Speed
Class BFGUpgrade4 : UpgradeItem 				{ Default { UpgradeItem.Cost 10000; }}	// Redirector
Class CarrionUpgradePickup : UpgradeItem 		{ Default { UpgradeItem.Cost 6666; }}
Class CarrionUpgradeAmmo : UpgradeItem 			{ Default { UpgradeItem.Cost 6666; }}
Class CarrionUpgradeStun : UpgradeItem 			{ Default { UpgradeItem.Cost 6666; }}
Class CarrionUpgradeTime : UpgradeItem 			{ Default { UpgradeItem.Cost 6666; }}
Class ChaingunMod1 : UpgradeItem				{ Default { UpgradeItem.Cost 6000; }}	// rotator
Class ChaingunMod2 : UpgradeItem				{ Default { UpgradeItem.Cost 8000; }}	// turret
Class GaussCannonMod1 : UpgradeItem 			{ Default { UpgradeItem.Cost 8000; }}	// precision shot
Class GaussCannonMod2 : UpgradeItem				{ Default { UpgradeItem.Cost 10000; }}	// siege mode
Class LGUpgradeRange : UpgradeItem				{ Default { UpgradeItem.Cost 4000; }}
Class LGUpgradeAmmo : UpgradeItem				{ Default { UpgradeItem.Cost 2000; }}
Class LGUpgradeDamage : UpgradeItem				{ Default { UpgradeItem.Cost 9000; }}
Class LGUpgradeAltFire : UpgradeItem			{ Default { UpgradeItem.Cost 9000; }}
Class PistolUpgradeAutomatic : UpgradeItem		{ Default { UpgradeItem.Cost 2000; }}
Class PistolUpgradeAltDamage : UpgradeItem		{ Default { UpgradeItem.Cost 4000; }}
Class PistolUpgradeAltCharge : UpgradeItem		{ Default { UpgradeItem.Cost 4000; }}
Class PistolUpgradeDamage : UpgradeItem			{ Default { UpgradeItem.Cost 2500; }}
Class PistolUpgradeLance : UpgradeItem			{ Default { UpgradeItem.Cost 12000; }}
Class PlasmaRifleMod1 : UpgradeItem				{ Default { UpgradeItem.Cost 5000; }}	// heat shot upgrade
Class PlasmaRifleMod2 : UpgradeItem 			{ Default { UpgradeItem.Cost 3000; }}	// electric grenade upgrade
Class RepeaterUpgradePiercing : UpgradeItem 	{ Default { UpgradeItem.Cost 4000; }}	// Upgrade 1: Bullets pierce 1 Monster;
Class RepeaterUpgradeDamage : UpgradeItem 		{ Default { UpgradeItem.Cost 4000; }}	// Upgrade 2: increased primary fire damage
Class RepeaterUpgradeAltDamage : UpgradeItem 	{ Default { UpgradeItem.Cost 3000; }}	// Upgrade 3: increased alt fire burn damage
Class RepeaterUpgradeAltAmmo : UpgradeItem		{ Default { UpgradeItem.Cost 3000; }}	// Upgrade 4: Decrease ammo requirement for alt fire
Class RocketLauncherMod1 : UpgradeItem			{ Default { UpgradeItem.Cost 5000; }}	// detonate
Class RocketLauncherMod2 : UpgradeItem 			{ Default { UpgradeItem.Cost 5000; }}	// lock on
Class ShotgunMod1 : UpgradeItem 				{ Default { UpgradeItem.Cost 3000; }}	// Triple shot
Class ShotgunMod2 : UpgradeItem 				{ Default { UpgradeItem.Cost 3000; }}	// grenade mod
Class StaticUpgrade1 : UpgradeItem 				{ Default { UpgradeItem.Cost 2500; }}
Class StaticUpgrade2 : UpgradeItem 				{ Default { UpgradeItem.Cost 5000; }}
Class StaticUpgrade3 : UpgradeItem 				{ Default { UpgradeItem.Cost 7500; }}
Class StaticUpgrade4 : UpgradeItem 				{ Default { UpgradeItem.Cost 10000; }}
Class SSGUpgrade1 : UpgradeItem					{ Default { UpgradeItem.Cost 2000; }}
Class SSGUpgrade2 : UpgradeItem					{ Default { UpgradeItem.Cost 2500; }}
Class SSGUpgrade3 : UpgradeItem					{ Default { UpgradeItem.Cost 4000; }}
Class SSGUpgrade4 : UpgradeItem					{ Default { UpgradeItem.Cost 10000; }}
Class VortexUpgradeDamage : UpgradeItem 		{ Default { UpgradeItem.Cost 4000; }}
Class VortexUpgradeAmmo : UpgradeItem 			{ Default { UpgradeItem.Cost 6000; }}
Class VortexUpgradeAltSpeed : UpgradeItem 		{ Default { UpgradeItem.Cost 2500; }}
Class VortexUpgradeAltPierce : UpgradeItem 		{ Default { UpgradeItem.Cost 3500; }}

//==============================================================================
//==============================================================================
//	Suit Upgrades
//==============================================================================
//==============================================================================

Class D4HigherJump : UpgradeItem 				{ Default { UpgradeItem.Cost 6000;	}}
Class D4MultiJump : UpgradeItem 				{ Default { UpgradeItem.Cost 8000;	Inventory.MaxAmount 3; }}
Class D4AirControl : UpgradeItem 				{ Default { UpgradeItem.Cost 10000;	}}
Class D4Stamina : UpgradeItemTier
{ 
	Default 
	{
		UpgradeItem.Cost 5000;
		UpgradeItemTier.Cost2 10000;
		UpgradeItemTier.Cost3 20000;
		UpgradeItem.Quantity 25;
		UpgradeItemTier.Quantity2 50;
		UpgradeItemTier.Quantity3 100;
		Inventory.MaxAmount 100; 
	}
}
Class D4ArmorCapRaiser : UpgradeItemTier
{ 
	Default 
	{
		UpgradeItem.Cost 5000;
		UpgradeItemTier.Cost2 10000;
		UpgradeItemTier.Cost3 15000;
		UpgradeItem.Quantity 25;
		UpgradeItemTier.Quantity2 50;
		UpgradeItemTier.Quantity3 100;
		Inventory.MaxAmount 100; 
	}
}

Class D4CrateUpgrade : UpgradeItemTier			
{ 
	Default 
	{
		UpgradeItem.Cost 999;
		UpgradeItemTier.Cost2 9999;
		UpgradeItemTier.Cost3 19999;
		UpgradeItem.Quantity 1;
		UpgradeItemTier.Quantity2 2;
		UpgradeItemTier.Quantity3 3;
		Inventory.MaxAmount 3; 
	}
}

//==============================================================================
//==============================================================================
//	Powerup Upgrades
//==============================================================================
//==============================================================================

Class D4RegenUpgrade1 : UpgradeItem 			{ Default { UpgradeItem.Cost 12000; }}	// Armor Regen
Class D4RegenUpgrade2 : UpgradeItem 			{ Default { UpgradeItem.Cost 15000; }}	// Dual Regen
Class D4RegenUpgrade3 : UpgradeItem 			{ Default { UpgradeItem.Cost 25000; }}	// Double Regen Rate
Class D4RegenUpgrade4 : UpgradeItem 			{ Default { UpgradeItem.Cost 15000; }}	// Max health +100 (Soulsphere Only)
Class D4MegachargeUpgrade1 : UpgradeItem		{ Default { UpgradeItem.Cost 10000; }}	// +1% resist, max 25%
Class D4MegachargeUpgrade2 : UpgradeItem		{ Default { UpgradeItem.Cost 20000; }}	// time stop
Class D4DoomDollUpgrade1 : UpgradeItem			{ Default { UpgradeItem.Cost 15000; }}	// + run & jump speed on use
Class D4DoomDollUpgrade2 : UpgradeItem			{ Default { UpgradeItem.Cost 20000; }}	// powerful explosion on fist bump
